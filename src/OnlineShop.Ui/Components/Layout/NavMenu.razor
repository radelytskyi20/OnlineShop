@inject ILoginStatusManager LoginStatusManager
@rendermode RenderMode.InteractiveServer

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">OnlineShop.Ui</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house" aria-hidden="true"></span>
                Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="articles-list">
                <span class="bi bi-articles-list" aria-hidden="true"></span>
                Articles
            </NavLink>
        </div>
        @if (LoginStatusManager.LoginStatus.Token?.IsLoggedIn ?? false)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="checkout">
                    <span class="bi bi-bag" aria-hidden="true"></span>
                    Checkout
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="orders-list">
                    <span class="bi bi-briefcase" aria-hidden="true"></span>
                    Orders
                </NavLink>
            </div>
        }
    </nav>
</div>

@code{
    
    protected override void OnInitialized()
    {
        LoginStatusManager.LoginStatusHasChanged += async (o, e) => await InvokeAsync(StateHasChanged);
    }
}